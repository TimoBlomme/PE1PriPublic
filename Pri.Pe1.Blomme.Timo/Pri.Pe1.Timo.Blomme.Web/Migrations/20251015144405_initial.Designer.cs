// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.Pe1.Timo.Blomme.Web.Data;

#nullable disable

namespace Pri.Pe1.Timo.Blomme.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251015144405_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pri.Pe1.Timo.Blomme.core.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Gent",
                            MaxParticipants = 50,
                            Title = "Hackathon"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Brugge",
                            MaxParticipants = 100,
                            Title = "CodeCamp"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2025, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Antwerpen",
                            MaxParticipants = 75,
                            Title = "TechNight"
                        });
                });

            modelBuilder.Entity("Pri.Pe1.Timo.Blomme.core.Entities.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Participants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "tom@example.com",
                            EventId = 1,
                            Name = "Tom Jansen"
                        },
                        new
                        {
                            Id = 2,
                            Email = "lisa@example.com",
                            EventId = 2,
                            Name = "Lisa Peeters"
                        },
                        new
                        {
                            Id = 3,
                            Email = "jan@example.com",
                            EventId = 3,
                            Name = "Jan De Smet"
                        });
                });

            modelBuilder.Entity("Pri.Pe1.Timo.Blomme.core.Entities.Participant", b =>
                {
                    b.HasOne("Pri.Pe1.Timo.Blomme.core.Entities.Event", "Event")
                        .WithMany("Participants")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Pri.Pe1.Timo.Blomme.core.Entities.Event", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
